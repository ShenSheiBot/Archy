/* Force transparent background - must override Bootstrap and other libraries */
html, body {
  width: 100%;
  height: 100%;
  background: transparent !important;
  background-color: transparent !important;
  color: #333333;
  margin: 0;
  overflow: hidden;
}

/* Ensure all root containers are transparent and have full height */
#root {
  width: 100%;
  height: 100%;
  background: transparent !important;
  background-color: transparent !important;
}

.browser-wrap {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: transparent !important;
  background-color: transparent !important;
}

/* Page layers - always rendered, switched by opacity */
.page-layer {
  position: absolute;
  inset: 0;
  z-index: 0;
}

.container,
.container-fluid {
  background: transparent !important;
  background-color: transparent !important;
}

#nprogress .bar {
  height: 5px;
}

/* Visibility control - use opacity instead of display:none to preserve GPU layers */
.hidden {
  opacity: 0 !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

.visible {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition: opacity 140ms ease;
}

/* Safety underlay to prevent desktop showing through during transitions */
.safety-underlay {
  position: fixed;
  top: 38px; /* Below navbar */
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  background: #f8f9fa; /* Match webview-container background */
  opacity: 0;
  pointer-events: none;
  transition: opacity 80ms ease;
}

.safety-underlay.show {
  opacity: 1;
}

/* WebView slot - keep GPU composite layer alive */
.webview-slot {
  position: absolute;
  inset: 0;
  background: #f8f9fa; /* Double insurance: container matches page background */
  will-change: opacity;
  backface-visibility: hidden;
}

/* 1px bleed for webview to eat subpixel gaps */
.webview-slot webview,
.webview-container webview {
  position: absolute;
  inset: -1px; /* Extend 1px on all sides */
  z-index: 0;
}